---
openapi: 3.0.3
info:
  title: onecx-permission-bff
  version: 1.0.0
servers:
  - url: "http://onecx-permission-bff:8080"
tags:
  - name: application
  - name: assignment
  - name: permission
  - name: role
  - name: workspace
paths:
  /roles:
    post:
      x-onecx:
        permissions:
          role:
            - write
      tags:
        - role
      description: create role
      operationId: createRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRolesRequest'
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /roles/{id}:
    get:
      x-onecx:
        permissions:
          role:
            - read
      tags:
        - role
      description: Return role by ID
      operationId: getRoleById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        404:
          description: Role not found
    put:
      x-onecx:
        permissions:
          role:
            - write
      tags:
        - role
      description: Update role by ID
      operationId: updateRole
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleRequest'
      responses:
        204:
          description: Theme updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        404:
          description: Role not found
    delete:
      x-onecx:
        permissions:
          role:
            - delete
      tags:
        - role
      description: Delete role by ID
      operationId: deleteRole
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Role deleted
  /roles/search:
    post:
      x-onecx:
        permissions:
          role:
            - read
      tags:
        - role
      description: Search for roles
      operationId: searchRoles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleSearchCriteria'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePageResult'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /roles/iam/search:
    post:
      x-onecx:
        permissions:
          role:
            - read
      tags:
        - role
      description: Search for available roles in iam
      operationId: searchAvailableRoles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IAMRoleSearchCriteria'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMRolePageResult'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /permissions:
    post:
      x-onecx:
        permissions:
          permission:
            - write
      tags:
        - permission
      description: Create permission
      operationId: createPermission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermissionRequest'
      responses:
        201:
          description: New permission created
          headers:
            Location:
              required: true
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /permissions/{id}:
    get:
      x-onecx:
        permissions:
          permission:
            - read
      tags:
        - permission
      description: Get permission
      operationId: getPermission
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
        404:
          description: Permission not found
    delete:
      x-onecx:
        permissions:
          permission:
            - delete
      tags:
        - permission
      description: Delete permission
      operationId: deletePermission
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Permission deleted
    put:
      x-onecx:
        permissions:
          permission:
            - write
      tags:
        - permission
      description: Update permission by ID
      operationId: updatePermission
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionRequest'
      responses:
        200:
          description: Permission updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        404:
          description: Permission not found
  /permissions/search:
    post:
      x-onecx:
        permissions:
          permission:
            - read
      tags:
        - permission
      description: Search for permissions
      operationId: searchPermissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionSearchCriteria'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionPageResult'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /assignments/search:
    post:
      x-onecx:
        permissions:
          assignment:
            - read
      tags:
        - assignment
      description: Search for assignments
      operationId: searchAssignments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentSearchCriteria'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentPageResult'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /assignments/user/search:
    post:
      x-onecx:
        permissions:
          assignment:
            - read
      tags:
        - assignment
      description: Search for assignments
      operationId: searchUserAssignments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentUserSearchCriteria'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAssignmentPageResult'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /assignments:
    post:
      x-onecx:
        permissions:
          assignment:
            - write
      tags:
        - assignment
      description: Create new assignment
      operationId: createAssignment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssignmentRequest'
      responses:
        201:
          description: New assignment created
          headers:
            Location:
              required: true
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
        404:
          description: Data not found
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /assignments/grant/{roleId}:
    post:
      tags:
        - assignment
      description: Create new assignments for role
      operationId: grantRoleAssignments
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: New assignment created
        404:
          description: Data not found
  /assignments/grant/{roleId}/application:
    post:
      tags:
        - assignment
      description: Create new assignments for role and application
      operationId: grantRoleApplicationAssignments
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleApplicationAssignmentRequest'
      responses:
        201:
          description: New assignment created
        404:
          description: Data not found
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /assignments/grant/{roleId}/products:
    post:
      tags:
        - assignment
      description: Create new assignments for role and products
      operationId: grantRoleProductsAssignments
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleProductsAssignmentRequest'
      responses:
        201:
          description: New assignment created
        404:
          description: Data not found
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /assignments/revoke/{roleId}:
    post:
      tags:
        - assignment
      description: Revoke assignments for role
      operationId: revokeRoleAssignments
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: assignment revoked
        404:
          description: Data not found
  /assignments/revoke/{roleId}/application:
    post:
      tags:
        - assignment
      description: Revoke assignments for role and application
      operationId: revokeRoleApplicationAssignments
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeRoleApplicationAssignmentRequest'
      responses:
        204:
          description: assignments revoked
        404:
          description: Data not found
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /assignments/revoke/{roleId}/products:
    post:
      tags:
        - assignment
      description: Revoke assignments for role and products
      operationId: revokeRoleProductsAssignments
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeRoleProductsAssignmentRequest'
      responses:
        204:
          description: assignment revoked
        404:
          description: Data not found
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /assignments/{id}:
    get:
      x-onecx:
        permissions:
          assignment:
            - read
      tags:
        - assignment
      description: Get assignment
      operationId: getAssignment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Get assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
        404:
          description: Assignment not found
    delete:
      x-onecx:
        permissions:
          assignment:
            - delete
      tags:
        - assignment
      description: Delete assignment
      operationId: deleteAssignment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Assignment deleted
  /assignments/export:
    x-onecx:
      permissions:
        assignment:
          - read
    post:
      tags:
        - assignment
      description: Export assignments
      operationId: exportAssignments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAssignmentsRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
        "404":
          description: No themes founds
  /assignments/import:
    x-onecx:
      permissions:
        assignment:
          - write
    post:
      tags:
        - assignment
      description: Import assignments
      operationId: importAssignments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Import successful
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /applications/search:
    post:
      x-onecx:
        permissions:
          application:
            - read
      tags:
        - application
      description: Search for applications
      operationId: searchApplications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationSearchCriteria'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPageResult'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /workspaces/search:
    post:
      x-onecx:
        permissions:
          workspace:
            - read
      tags:
        - workspace
      description: search workspaces by criteria
      operationId: searchWorkspaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceSearchCriteria'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspacePageResult'
  /workspaces/{workspaceName}/details:
    get:
      x-onecx:
        permissions:
          workspace:
            - read
      tags:
        - workspace
      description: get detailed information to all workspace related products and roles
      operationId: getDetailsByWorkspaceName
      parameters:
        - name: workspaceName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDetails'
  /user/permissions:
    post:
      x-onecx:
        permissions:
          permission:
            - read
      tags:
        - user
      description: get user permissions
      operationId: getUserPermissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCriteria'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPermissionsPageResult'
  /user/roles:
    post:
      x-onecx:
        permissions:
          role:
            - read
      tags:
        - user
      description: get user roles
      operationId: getUserRoles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCriteria'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRolesPageResult'
  /user/assignments:
    post:
      x-onecx:
        permissions:
          assignment:
            - read
      tags:
        - user
      description: get user assignments
      operationId: getUserAssignments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCriteria'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAssignmentPageResult'
components:
  schemas:
    ExportAssignmentsRequest:
      type: object
      properties:
        productNames:
          type: array
          uniqueItems: true
          items:
            type: string
    UserCriteria:
      type: object
      properties:
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    UserAssignmentPageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/UserAssignment'
    UserAssignment:
      type: object
      properties:
        roleName:
          type: string
        productName:
          type: string
        applicationId:
          type: string
        resource:
          type: string
        action:
          type: string
    UserPermissionsPageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    UserRolesPageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    CreateRolesRequest:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/CreateRoleRequest'
    CreateRoleRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    Role:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        name:
          type: string
        description:
          type: string
        mandatory:
          type: boolean
          default: false
    UpdateRoleRequest:
      type: object
      required:
        - modificationCount
      properties:
        modificationCount:
          format: int32
          type: integer
        name:
          type: string
        shortDescription:
          type: string
        description:
          type: string
    IAMRoleSearchCriteria:
      type: object
      properties:
        name:
          type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    IAMRolePageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/IAMRole'
    IAMRole:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    RoleSearchCriteria:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    PermissionSearchCriteria:
      type: object
      properties:
        appId:
          type: string
        productNames:
          type: array
          items:
            type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    RolePageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    PermissionPageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    Permission:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        appId:
          type: string
        productName:
          type: string
        resource:
          type: string
        action:
          type: string
        description:
          type: string
        mandatory:
          type: boolean
          default: false
        operator:
          type: boolean
          default: false
    CreatePermissionRequest:
      type: object
      properties:
        appId:
          type: string
        productName:
          type: string
        resource:
          type: string
        action:
          type: string
        description:
          type: string
    UpdatePermissionRequest:
      required:
        - modificationCount
      properties:
        modificationCount:
          format: int32
          type: integer
        appId:
          type: string
        productName:
          type: string
        resource:
          type: string
        action:
          type: string
        description:
          type: string
    AssignmentSearchCriteria:
      type: object
      properties:
        appIds:
          type: array
          items:
            type: string
        roleId:
          type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    AssignmentUserSearchCriteria:
      type: object
      properties:
        userId:
          type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    AssignmentPageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
    CreateAssignmentRequest:
      type: object
      required:
        - roleId
        - permissionId
      properties:
        roleId:
          type: string
        permissionId:
          type: string
    CreateProductAssignmentsRequest:
      type: object
      required:
        - roleId
      properties:
        roleId:
          type: string
        appId:
          type: string
        productNames:
          type: array
          items:
            type: string
    Assignment:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        roleId:
          type: string
        permissionId:
          type: string
        appId:
          type: string
        productName:
          type: string
        id:
          type: string
        mandatory:
          type: boolean
          default: false
    ApplicationSearchCriteria:
      type: object
      properties:
        appId:
          type: string
        productName:
          type: string
        name:
          type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    ApplicationPageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/Application'
    Application:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        appId:
          type: string
        productName:
          type: string
        name:
          type: string
        description:
          type: string
    WorkspacePageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceAbstract'
    WorkspaceAbstract:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
    WorkspaceSearchCriteria:
      type: object
      properties:
        themeName:
          type: string
        productName:
          type: string
        workspaceName:
            type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    WorkspaceDetails:
      type: object
      properties:
        workspaceRoles:
          type: array
          items:
            type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductDetails'
    ProductDetails:
      type: object
      properties:
        productName:
          type: string
        displayName:
          type: string
        mfe:
          type: array
          items:
            $ref: '#/components/schemas/MfeMsAbstract'
        ms:
          type: array
          items:
            $ref: '#/components/schemas/MfeMsAbstract'
    MfeMsAbstract:
      type: object
      properties:
        appName:
          type: string
        appId:
          type: string
    CreateRoleProductsAssignmentRequest:
      type: object
      required:
        - productNames
      properties:
        productNames:
          type: array
          minItems: 1
          items:
            type: string
    CreateRoleApplicationAssignmentRequest:
      type: object
      required:
        - productName
        - appId
      properties:
        appId:
          type: string
        productName:
          type: string
    RevokeRoleProductsAssignmentRequest:
      type: object
      required:
        - productNames
      properties:
        productNames:
          type: array
          minItems: 1
          items:
            type: string
    RevokeRoleApplicationAssignmentRequest:
      type: object
      required:
        - productName
        - appId
      properties:
        appId:
          type: string
        productName:
          type: string
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailParam'
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailInvalidParam'
    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
